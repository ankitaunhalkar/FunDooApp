package com.bridgelabz.fundoonotes.note.controller;

import java.util.List;

import javax.servlet.http.HttpServletRequest;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;

import com.bridgelabz.fundoonotes.note.model.CreateNoteDto;
import com.bridgelabz.fundoonotes.note.model.ResponseDto;
import com.bridgelabz.fundoonotes.note.services.INoteService;

@RestController
public class NoteController {

	@Autowired
	INoteService noteService;

	@RequestMapping(name = "/createnote", method = RequestMethod.POST)
	public ResponseEntity<ResponseDto> createNote(@RequestBody CreateNoteDto note, HttpServletRequest request) {

		String token = request.getHeader("uid");

		ResponseDto noteCreated = noteService.createNote(note, token);

		if (noteCreated != null) {
			
			return new ResponseEntity<ResponseDto>(noteCreated, HttpStatus.CREATED);
			
		} 
		
		return new ResponseEntity<ResponseDto>(HttpStatus.CONFLICT);
	}

	

/*	@RequestMapping(name = "/noteupdate/{id}", method = RequestMethod.POST)
	public ResponseEntity<ResponseDto> updateNote(@PathVariable("id")  long id, @RequestBody CreateNoteDto note,
			HttpServletRequest request) {

		System.out.println("fdfcjuc");
		
		String token = request.getHeader("uid");
		
		ResponseDto noteUpdated = noteService.updateNote(token, note, id);

		if (noteUpdated != null) {
			
			return new ResponseEntity<ResponseDto>(noteUpdated, HttpStatus.CREATED);
			
		}
		
		return new ResponseEntity<ResponseDto>(HttpStatus.BAD_REQUEST);

	}*/
	
	@RequestMapping(name="/notes/{id}", method = RequestMethod.PUT)
	private ResponseEntity<String> update(@PathVariable("id") long id, @RequestBody CreateNoteDto note) {
		System.out.println(id);
		return new ResponseEntity<String>("Hello",HttpStatus.OK);

	
		
	}
	@RequestMapping(name = "/getnotes", method = RequestMethod.GET)
	public ResponseEntity<List<ResponseDto>> getNotes(HttpServletRequest request) {
		
		String token = request.getHeader("uid");

		List<ResponseDto> notelist = noteService.getNotes(token);
		
		if (notelist != null) {
			
			return new ResponseEntity<List<ResponseDto>>(notelist, HttpStatus.OK);
			
		}
		
		return new ResponseEntity<List<ResponseDto>>(HttpStatus.NOT_FOUND);

	}
}