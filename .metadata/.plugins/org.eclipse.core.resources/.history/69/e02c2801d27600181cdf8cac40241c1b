package com.bridgelabz.fundoonotes.dao;

import java.util.List;

import org.hibernate.Criteria;
import org.hibernate.SessionFactory;
import org.hibernate.criterion.Restrictions;
import org.hibernate.query.Query;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;

import com.bridgelabz.fundoonotes.model.User;

@Repository
public class UserDaoImpl implements UserDao{

	@Autowired
	SessionFactory sessionFcatory;

	@Override
	public Integer register(User user) {
		int status = (Integer) sessionFcatory.getCurrentSession().save(user);
		return status;
	}

	@Override
	public User login(User user) {
		// TODO Auto-generated method stub
		return null;
	}

	/*public User getByEmail(String email) {
		String query = "select * from users where email=?";
		 List<User> list = jdbcTemplate.query(query, new Object[] { email }, new RowMapper<User>()  {
		User user = jdbcTemplate.queryForObject(query, new Object[] { email }, new RowMapper<User>() {

			@Override
			public User mapRow(ResultSet rs, int rowNum) throws SQLException {
				User user = new User();
				user.setName(rs.getString("name"));
				user.setEmail(rs.getString("email"));
				user.setCity(rs.getString("city"));
				user.setPassword(rs.getString("password"));
				return user;
			}
		});
		 System.out.println(list.size());
		// return (User) list;
		 return list.size() > 0 ? list.get(0) : null;
	}*/
	
	/*String querySelect = "from Employee where id =: id";

	Query query = session.createQuery(querySelect);
	query.setParameter("id", id);*/

	@Override
	public User getByEmail(String email) {
		Criteria crt = sessionFcatory.openSession().createCriteria(User.class);
		crt.add(Restrictions.eq("email",email));	
		List<User> user =  crt.list();
		System.out.println("list"+crt.list());
		return user.size() > 0 ? user.get(0):null;
	}	
}
