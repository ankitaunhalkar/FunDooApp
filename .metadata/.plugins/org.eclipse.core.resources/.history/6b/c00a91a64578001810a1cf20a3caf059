package com.bridgelabz.fundoonotes.services;

import javax.transaction.Transactional;

import org.mindrot.jbcrypt.BCrypt;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.bridgelabz.fundoonotes.dao.IUserDao;
import com.bridgelabz.fundoonotes.model.User;

@Service
public class UserServiceImpl implements IUserService {

	@Autowired
	IUserDao userDao;

	@Override
	@Transactional
	public Integer register(User user) {
		int registerStatus = 0;
		
		//password encoding
		user.setPassword(BCrypt.hashpw(user.getPassword(), BCrypt.gensalt()));
		
		//checking if mail id is already exists or not
		User userRegister = userDao.getByEmail(user.getEmail());
		
		if (userRegister != null) {
			
			return registerStatus;
			
		}
		//if not existing then save
		return registerStatus = userDao.save(user);
	}

	@Override
	@Transactional
	public User login(User user) {
		User loginStatus = null;

		//checking if mail id exists or not
		loginStatus = userDao.getByEmail(user.getEmail());
		
		/*if ((loginStatus != null) && (loginStatus.getPassword().equals(user.getPassword()))) {
			boolean match = BCrypt.checkpw(user.getPassword(), loginStatus.getPassword());
			return loginStatus;
		}*/
		if ((loginStatus != null) && (BCrypt.checkpw(user.getPassword(), loginStatus.getPassword()))) {
			
			return loginStatus;
		}
		

		return loginStatus;
	}

}
