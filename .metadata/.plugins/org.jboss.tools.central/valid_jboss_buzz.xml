<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" media="screen" href="/~d/styles/atom10full.xsl"?><?xml-stylesheet type="text/css" media="screen" href="http://feeds.feedburner.com/~d/styles/itemcontent.css"?><feed xmlns="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0"><title>JBoss Tools Aggregated Feed</title><link rel="alternate" href="http://tools.jboss.org" /><subtitle>JBoss Tools Aggregated Feed</subtitle><dc:creator>JBoss Tools</dc:creator><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="self" type="application/atom+xml" href="http://feeds.feedburner.com/jbossbuzz" /><feedburner:info uri="jbossbuzz" /><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="hub" href="http://pubsubhubbub.appspot.com/" /><entry><title>3 Pitfalls Everyone Should Avoid with Hybrid Multicloud (Part 3)</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/bl66NxNce2Y/3-pitfalls-everyone-should-avoid-with-hybrid-multicloud-part-3.html" /><category term="AppDev" scheme="searchisko:content:tags" /><category term="cloud" scheme="searchisko:content:tags" /><category term="Cloud Suite" scheme="searchisko:content:tags" /><category term="Containers" scheme="searchisko:content:tags" /><category term="feed_group_name_global" scheme="searchisko:content:tags" /><category term="feed_name_ericschabell" scheme="searchisko:content:tags" /><category term="JBoss" scheme="searchisko:content:tags" /><category term="openshift" scheme="searchisko:content:tags" /><author><name>Eric D. Schabell</name></author><id>searchisko:content:id:jbossorg_blog-3_pitfalls_everyone_should_avoid_with_hybrid_multicloud_part_3</id><updated>2018-07-05T05:00:16Z</updated><published>2018-07-05T05:00:00Z</published><content type="html">&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;&lt;a href="https://4.bp.blogspot.com/-uX_LEfg-y0Q/WqwSisY0z4I/AAAAAAAAsD4/YhckJvQSEhM3jgyy_zPAe0cUKsJh84-7QCLcBGAs/s1600/pitfalls.png" imageanchor="1" style="clear: left; float: left; margin-bottom: 1em; margin-right: 1em;"&gt;&lt;img alt="three pitfalls" border="0" data-original-height="250" data-original-width="283" height="175" src="https://4.bp.blogspot.com/-uX_LEfg-y0Q/WqwSisY0z4I/AAAAAAAAsD4/YhckJvQSEhM3jgyy_zPAe0cUKsJh84-7QCLcBGAs/s200/pitfalls.png" title="" width="200" /&gt;&lt;/a&gt;&lt;br /&gt;The daily cloud hype is all around you, yet there are three pitfalls everyone should avoid.&lt;br /&gt;&lt;br /&gt;From cloud, hybrid cloud, to hybrid multicloud, you’re told this is the way to ensure a digital future for your business. These choices you’ve got to make don’t preclude the daily work of enhancing your customer's experience and agile delivery of those applications.&lt;br /&gt;&lt;br /&gt;Let's take a journey, looking closely at what hybrid multicloud means for your business. Let's examine the decisions being made when delivering applications and dealing with legacy applications. Likely these are some of the most important resources to your business.&lt;br /&gt;&lt;br /&gt;This article highlights three pitfalls everyone should be aware of when transitioning into hybrid multicloud environments. It's based on experiences from interactions with organizations working to conquer hybrid multicloud while delivering their solutions.&lt;br /&gt;&lt;br /&gt;&lt;a href="http://www.schabell.org/2018/03/3-pitfalls-everyone-should-avoid-with-hybrid-multicloud-part-1.html" target="_blank"&gt;In part one&lt;/a&gt;, we covered the basic definitions to level the playing field. We outlined our views on hybrid cloud and multicloud, making sure to show the dividing lines between the two. This set the stage &lt;a href="http://www.schabell.org/2018/06/3-pitfalls-everyone-should-avoid-with-hybrid-multicloud-part-2.html#more" target="_blank"&gt;for part two&lt;/a&gt;, where the first pitfall discussed why cost is not always the obvious motivator for moving in to the cloud.&lt;br /&gt;&lt;br /&gt;In part three, it's time for technology and looking at the question of whether it's a good plan moving all workloads in to the cloud?&lt;br /&gt;&lt;a name='more'&gt;&lt;/a&gt;&lt;br /&gt;&lt;h3 style="text-align: left;"&gt;Everything better in the cloud&lt;/h3&gt;&lt;a href="https://4.bp.blogspot.com/-bP76TrXvIAk/WzzaZ8lFF-I/AAAAAAAAs3k/nHzj4e5eXEwVbec5_jwhXdkyeZ20UfouQCLcBGAs/s1600/Screen%2BShot%2B2018-07-04%2Bat%2B16.31.46.png" imageanchor="1" style="clear: right; float: right; margin-bottom: 1em; margin-left: 1em;"&gt;&lt;img alt="three pitfalls" border="0" data-original-height="206" data-original-width="368" height="177" src="https://4.bp.blogspot.com/-bP76TrXvIAk/WzzaZ8lFF-I/AAAAAAAAs3k/nHzj4e5eXEwVbec5_jwhXdkyeZ20UfouQCLcBGAs/s320/Screen%2BShot%2B2018-07-04%2Bat%2B16.31.46.png" title="" width="320" /&gt;&lt;/a&gt;The second pitfall is about the misconception that everything will benefit from running in the cloud. All workloads are not equal and not all workloads moving in to the cloud result in a measurable effect on the bottom line.&lt;br /&gt;&lt;br /&gt;A &lt;a href="https://www.informationweek.com/cloud/10-cloud-migration-mistakes-to-avoid" target="_blank"&gt;recent article stated&lt;/a&gt;, "Not all business applications should migrate to the cloud, and enterprises must determine which apps are best suited to a cloud environment." A hard fact that the utility company mentioned in &lt;a href="http://www.schabell.org/2018/06/3-pitfalls-everyone-should-avoid-with-hybrid-multicloud-part-2.html" target="_blank"&gt;part two of this series&lt;/a&gt; found out as labor costs rose while trying to move applications in to the cloud.&lt;br /&gt;&lt;br /&gt;Discovering this was not a viable solution, the utility company backed up and re-evaluated their applications. Turns out, some application were not heavily used, others had data ownership and compliance issues. Some of their applications were not certified for use in a cloud environment.&lt;br /&gt;&lt;br /&gt;Sometimes it's not physically possible to run applications in the cloud, but other times it's not financially viable to run in the cloud.&lt;br /&gt;&lt;br /&gt;Imagine a fictive online travel company. As their business grew, they expanded their hosting capacity on-premise eventually to over 40 thousand servers. It became a question of expanding their resources by purchasing a datacenter at a time, not a rack at a time. Their business consumes bandwidth at such volumes that cloud pricing models, based on bandwidth usage, remains prohibitive.&lt;br /&gt;&lt;br /&gt;&lt;h3 style="text-align: left;"&gt;Baseline and containers&lt;/h3&gt;Nothing is more important than having a thorough understanding of your application landscape. Along with a good understanding what applications need to migrate to the cloud, you also need to understand current IT environments, present level of resources, and estimate costs for moving.&lt;br /&gt;&lt;br /&gt;There are also many believing that you need containers to be successful in the cloud. The famous &lt;a href="https://speakerdeck.com/caseywest/containercon-north-america-cloud-anti-patterns" target="_blank"&gt;catch phrase&lt;/a&gt;&amp;nbsp;sums it up nicely, "We crammed this monolith into a container and called it a microservice."&lt;br /&gt;&lt;br /&gt;&lt;a href="https://4.bp.blogspot.com/-28RZcPUcB-I/WzzaqFASwlI/AAAAAAAAs3s/QoAp57iReo8bmhynb4OWqIpjG-_IqD-fQCLcBGAs/s1600/Screen%2BShot%2B2018-07-04%2Bat%2B16.32.41.png" imageanchor="1" style="clear: right; float: right; margin-bottom: 1em; margin-left: 1em;"&gt;&lt;img alt="three pitfalls" border="0" data-original-height="349" data-original-width="762" height="145" src="https://4.bp.blogspot.com/-28RZcPUcB-I/WzzaqFASwlI/AAAAAAAAs3s/QoAp57iReo8bmhynb4OWqIpjG-_IqD-fQCLcBGAs/s320/Screen%2BShot%2B2018-07-04%2Bat%2B16.32.41.png" title="" width="320" /&gt;&lt;/a&gt;It's not about the technology involved, it's about applications that often were written in days gone by using dated technology. If you put a tire fire into a container and then put that container on a container platform (ship), it's going to make for a bigger fire.&lt;br /&gt;&lt;br /&gt;These container fires just create more challenges for your DevOps teams, who are already struggling to keep up with all the changes being pushed through an organization moving everything into the cloud.&lt;br /&gt;&lt;br /&gt;&lt;h3 style="text-align: left;"&gt;Pitfalls everyone should avoid&lt;/h3&gt;In part four of this series, the third and final pitfall is presented. A pitfall that everyone should avoid with hybrid multicloud. Find out what the cloud means for your data.&lt;br /&gt;&lt;br /&gt;Missing the start of this series? Just head on back and &lt;a href="http://www.schabell.org/2018/03/3-pitfalls-everyone-should-avoid-with-hybrid-multicloud-part-1.html" target="_blank"&gt;catch up with part 1&lt;/a&gt;.&lt;/div&gt;&lt;div class="feedflare"&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=1SxkCue2P5w:8PXyNxkhM-g:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=1SxkCue2P5w:8PXyNxkhM-g:63t7Ie-LG7Y"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=63t7Ie-LG7Y" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=1SxkCue2P5w:8PXyNxkhM-g:4cEx4HpKnUU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=1SxkCue2P5w:8PXyNxkhM-g:4cEx4HpKnUU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=1SxkCue2P5w:8PXyNxkhM-g:F7zBnMyn0Lo"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=1SxkCue2P5w:8PXyNxkhM-g:F7zBnMyn0Lo" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=1SxkCue2P5w:8PXyNxkhM-g:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=1SxkCue2P5w:8PXyNxkhM-g:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=1SxkCue2P5w:8PXyNxkhM-g:qj6IDK7rITs"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=qj6IDK7rITs" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=1SxkCue2P5w:8PXyNxkhM-g:gIN9vFwOqvQ"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=1SxkCue2P5w:8PXyNxkhM-g:gIN9vFwOqvQ" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/schabell/jboss/~4/1SxkCue2P5w" height="1" width="1" alt=""/&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/bl66NxNce2Y" height="1" width="1" alt=""/&gt;</content><summary>The daily cloud hype is all around you, yet there are three pitfalls everyone should avoid. From cloud, hybrid cloud, to hybrid multicloud, you’re told this is the way to ensure a digital future for your business. These choices you’ve got to make don’t preclude the daily work of enhancing your customer's experience and agile delivery of those applications. Let's take a journey, looking closely at ...</summary><dc:creator>Eric D. Schabell</dc:creator><dc:date>2018-07-05T05:00:00Z</dc:date><feedburner:origLink>http://feedproxy.google.com/~r/schabell/jboss/~3/1SxkCue2P5w/3-pitfalls-everyone-should-avoid-with-hybrid-multicloud-part-3.html</feedburner:origLink></entry><entry><title>Keycloak 4.1.0.Final released</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/oSBJrbBta_g/keycloak-410final-released.html" /><category term="feed_group_name_keycloak" scheme="searchisko:content:tags" /><category term="feed_name_keycloak" scheme="searchisko:content:tags" /><author><name>Marek Posolda</name></author><id>searchisko:content:id:jbossorg_blog-keycloak_4_1_0_final_released</id><updated>2018-07-04T20:05:03Z</updated><published>2018-07-04T20:05:00Z</published><content type="html">&lt;p&gt;To download the release go to the &lt;a href="http://www.keycloak.org/downloads"&gt;Keycloak homepage&lt;/a&gt;. &lt;p&gt;For details on what is included in the release check out the &lt;a href="https://www.keycloak.org/docs/latest/release_notes/index.html"&gt;Release notes&lt;/a&gt; &lt;p&gt;The full list of resolved issues is available in &lt;a href="https://issues.jboss.org/issues/?jql=project%20%3D%20keycloak%20and%20fixVersion%20%3D%204.1.0.Final"&gt;JIRA&lt;/a&gt;. &lt;p&gt;Before you upgrade remember to backup your database and check the &lt;a href="http://www.keycloak.org/docs/latest/upgrading/index.html"&gt;upgrade guide&lt;/a&gt; for anything that may have changed.&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/oSBJrbBta_g" height="1" width="1" alt=""/&gt;</content><summary>To download the release go to the Keycloak homepage. For details on what is included in the release check out the Release notes The full list of resolved issues is available in JIRA. Before you upgrade remember to backup your database and check the upgrade guide for anything that may have changed.</summary><dc:creator>Marek Posolda</dc:creator><dc:date>2018-07-04T20:05:00Z</dc:date><feedburner:origLink>http://blog.keycloak.org/2018/07/keycloak-410final-released.html</feedburner:origLink></entry><entry><title>Apache Camel 2.22 Released with Spring Boot 2 support</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/TAafCrMBlSE/apache-camel-222-released-with-spring.html" /><category term="apache camel" scheme="searchisko:content:tags" /><category term="feed_group_name_fusesource" scheme="searchisko:content:tags" /><category term="feed_name_clausibsen" scheme="searchisko:content:tags" /><category term="release" scheme="searchisko:content:tags" /><author><name>Claus Ibsen</name></author><id>searchisko:content:id:jbossorg_blog-apache_camel_2_22_released_with_spring_boot_2_support</id><updated>2018-07-04T12:08:35Z</updated><published>2018-07-04T12:08:00Z</published><content type="html">&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;Today we released the latest &lt;a href="http://camel.apache.org/2018/07/03/apache-camel-2220-released.html"&gt;Apache Camel 2.22.0 release&lt;/a&gt; which is the first release to officially fully support Spring Boot 2. This is a major effort as the Spring Boot v1 to v2 upgrade for a big framework like Apache Camel took some effort - so many thanks to the Camel team and the contributions. The support for Spring Boot 2 was the major goal of this release and therefore this release comes as soon as possible after the previous Camel 2.21 release, and as such, this release does not contain as much else as a normal release happens to include.&lt;br /&gt;&lt;br /&gt;The Spring team has already updated their start.spring.io website to now include Apache Camel when you use Spring Boot 2. If you are using Spring Boot 1, then the previous versions of Apache Camel, such as 2.21.1 works with SB1.&lt;br /&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://1.bp.blogspot.com/-PpWt-Vbn32Y/Wzy1X40_AWI/AAAAAAAABpU/mQa9OZP-zrYfYL780fFYRrDMkfV0TKw4gCLcBGAs/s1600/camel-sb2.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" data-original-height="580" data-original-width="1051" height="220" src="https://1.bp.blogspot.com/-PpWt-Vbn32Y/Wzy1X40_AWI/AAAAAAAABpU/mQa9OZP-zrYfYL780fFYRrDMkfV0TKw4gCLcBGAs/s400/camel-sb2.png" width="400" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;The release also includes some other noteworthy improvements such as an internal optimisation to the toD EIP with HTTP endpoints to better reuse existing http connections when sending to the same host with all sort of dynamic parameters.&lt;br /&gt;&lt;br /&gt;The Rest DSL has also been improved to support specifying security definitions that will be included in swagger doc. We also added support for enabling client request validation so the Rest DSL can validate whether a request can be processed based on its content-type and accepted response-type, and whether all mandatory parameters is included, and so on.&lt;br /&gt;&lt;br /&gt;There is also a number of new components:&lt;br /&gt;&lt;br /&gt;&lt;ul style="text-align: left;"&gt;&lt;li&gt;camel-as2 -&amp;nbsp;Component used for transferring data secure and reliable over the internet using the AS2 protocol.&lt;/li&gt;&lt;li&gt;camel-google-mail-stream -&amp;nbsp;The google-mail component provides access to Google Mail.&lt;/li&gt;&lt;li&gt;camel-micrometer -&amp;nbsp;To collect various metrics directly from Camel routes using the Micrometer library.&lt;/li&gt;&lt;li&gt;camel-mybatis-bean -&amp;nbsp;Performs a query, insert, update or delete in a relational database using MyBatis.&lt;/li&gt;&lt;li&gt;camel-service -&amp;nbsp;Represents an endpoint which only becomes active when the CamelClusterView has the leadership.&lt;/li&gt;&lt;li&gt;camel-web3j -&amp;nbsp;The web3j component uses the Web3j client API and allows you to add/read nodes to/from a web3j compliant content repositories.&lt;/li&gt;&lt;li&gt;camel-rxjava2 -&amp;nbsp;RxJava2 based back-end for Camel’s reactive streams component&lt;/li&gt;&lt;li&gt;camel-testcontainers -&amp;nbsp;Camel support for testcontainers&lt;/li&gt;&lt;li&gt;camel-testcontainers-spring -&amp;nbsp;Camel unit testing with Spring and testcontainers&lt;/li&gt;&lt;/ul&gt;&lt;div&gt;The next bigger Camel release is expected to be Camel 2.23 where we also would work on getting more of the documentation migrated to the new system, and with some luck have a new website and documentation ready for this release.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Also we will start to discuss the roadmap and bigger goal of Apache Camel 3 in the community. When this happens then we will post more about this in our blogs and elsewhere, so keep an eye if you are interested to help and provide your thoughts on this matter.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Now go and enjoy the Camel on Spring Boot 2.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="feedflare"&gt; &lt;a href="http://feeds.feedburner.com/~ff/ApacheCamel?a=vloC65AzIkI:sW0PCR92XU4:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/ApacheCamel?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/ApacheCamel?a=vloC65AzIkI:sW0PCR92XU4:4cEx4HpKnUU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/ApacheCamel?i=vloC65AzIkI:sW0PCR92XU4:4cEx4HpKnUU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/ApacheCamel?a=vloC65AzIkI:sW0PCR92XU4:F7zBnMyn0Lo"&gt;&lt;img src="http://feeds.feedburner.com/~ff/ApacheCamel?i=vloC65AzIkI:sW0PCR92XU4:F7zBnMyn0Lo" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/ApacheCamel?a=vloC65AzIkI:sW0PCR92XU4:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/ApacheCamel?i=vloC65AzIkI:sW0PCR92XU4:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/ApacheCamel/~4/vloC65AzIkI" height="1" width="1" alt=""/&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/TAafCrMBlSE" height="1" width="1" alt=""/&gt;</content><summary>Today we released the latest Apache Camel 2.22.0 release which is the first release to officially fully support Spring Boot 2. This is a major effort as the Spring Boot v1 to v2 upgrade for a big framework like Apache Camel took some effort - so many thanks to the Camel team and the contributions. The support for Spring Boot 2 was the major goal of this release and therefore this release comes as ...</summary><dc:creator>Claus Ibsen</dc:creator><dc:date>2018-07-04T12:08:00Z</dc:date><feedburner:origLink>http://feedproxy.google.com/~r/ApacheCamel/~3/vloC65AzIkI/apache-camel-222-released-with-spring.html</feedburner:origLink></entry><entry><title>Hibernate ORM 5.1.15.Final released</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/OOTRmpurjqg/" /><category term="feed_group_name_hibernate" scheme="searchisko:content:tags" /><category term="feed_name_inrelationto" scheme="searchisko:content:tags" /><category term="Hibernate ORM" scheme="searchisko:content:tags" /><category term="releases" scheme="searchisko:content:tags" /><author><name>Gail Badner</name></author><id>searchisko:content:id:jbossorg_blog-hibernate_orm_5_1_15_final_released</id><updated>2018-07-05T01:41:06Z</updated><published>2018-07-04T00:00:00Z</published><content type="html">&lt;div class="paragraph"&gt; &lt;p&gt;Hibernate ORM 5.1.15.Final:&lt;/p&gt; &lt;/div&gt; &lt;div class="ulist"&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;tag is &lt;a href="http://github.com/hibernate/hibernate-orm/releases/tag/5.1.15"&gt;here&lt;/a&gt;;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;changes are listed &lt;a href="https://hibernate.atlassian.net/projects/HHH/versions/31670"&gt;here&lt;/a&gt; (or, for people without a Hibernate Jira account, &lt;a href="https://hibernate.atlassian.net/secure/ReleaseNote.jspa?projectId=10031&amp;amp;version=31670"&gt;here&lt;/a&gt;);&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;release bundles are at &lt;a href="http://sourceforge.net/projects/hibernate/files/hibernate-orm/5.1.15.Final/"&gt;SourceForge&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;For information on consuming the release via your favorite dependency-management-capable build tool, see &lt;a href="http://hibernate.org/orm/releases/5.1" class="bare"&gt;http://hibernate.org/orm/releases/5.1&lt;/a&gt;&lt;/p&gt; &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/OOTRmpurjqg" height="1" width="1" alt=""/&gt;</content><summary>Hibernate ORM 5.1.15.Final: tag is here; changes are listed here (or, for people without a Hibernate Jira account, here); release bundles are at SourceForge. For information on consuming the release via your favorite dependency-management-capable build tool, see http://hibernate.org/orm/releases/5.1</summary><dc:creator>Gail Badner</dc:creator><dc:date>2018-07-04T00:00:00Z</dc:date><feedburner:origLink>http://in.relation.to/2018/07/04/hibernate-orm-5115-final-release/</feedburner:origLink></entry><entry><title>Customising path patterns for your Apiman Gateway</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/3AENywN72xA/custom-url-parser.html" /><category term="feed_group_name_apiman" scheme="searchisko:content:tags" /><category term="feed_name_apiman" scheme="searchisko:content:tags" /><author><name>Marc Savy</name></author><id>searchisko:content:id:jbossorg_blog-customising_path_patterns_for_your_apiman_gateway</id><updated>2018-07-03T20:00:00Z</updated><published>2018-07-03T20:00:00Z</published><content type="html">&lt;div class="paragraph"&gt; &lt;p&gt;One common request we here is how to create custom URL patterns for the Apiman Gateway.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;For example, this means allowing changing the (Public API) default:&lt;/p&gt; &lt;/div&gt; &lt;div class="listingblock"&gt; &lt;div class="content"&gt; &lt;pre class="CodeRay highlight"&gt;&lt;code&gt;http://gatewayhost:port/{organizationId}/{apiId}/{version}/&lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;To a custom alternative. As a simple example we&amp;#8217;re going to hard-code an organisation in. We&amp;#8217;ll assume that we&amp;#8217;ve established a convention to always publish our APIs to a particular org. That will change the pattern to:&lt;/p&gt; &lt;/div&gt; &lt;div class="listingblock"&gt; &lt;div class="content"&gt; &lt;pre class="CodeRay highlight"&gt;&lt;code&gt;http://gatewayhost:port/{apiId}/{version}/&lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="admonitionblock note"&gt; &lt;table&gt; &lt;tr&gt; &lt;td class="icon"&gt; &lt;i class="fa icon-note" title="Note"&gt;&lt;/i&gt; &lt;/td&gt; &lt;td class="content"&gt; If you&amp;#8217;re using the Vert.x Gateway you should use Apiman 1.4.3.Final or later as a bug prevented plugins from loading from static config. &lt;/td&gt; &lt;/tr&gt; &lt;/table&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="create-a-plugin-skeleton"&gt;Create a plugin skeleton&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="admonitionblock tip"&gt; &lt;table&gt; &lt;tr&gt; &lt;td class="icon"&gt; &lt;i class="fa icon-tip" title="Tip"&gt;&lt;/i&gt; &lt;/td&gt; &lt;td class="content"&gt; Check &lt;a href="http://www.apiman.io/latest/developer-guide.html#_creating_a_plugin"&gt;out our documentation for creating Apiman Plugins&lt;/a&gt; for more in-depth information. &lt;/td&gt; &lt;/tr&gt; &lt;/table&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;One of Apiman&amp;#8217;s handiest features is its plugin subsystem. This allows you to fully modularise custom code and distribute it through familiar channels like Maven repositories. It&amp;#8217;s much more convenient than trying to play around with customising the class-path and messing around to make sure files are in the right place.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;First, check out this plugin skeleton:&lt;/p&gt; &lt;/div&gt; &lt;div class="listingblock"&gt; &lt;div class="content"&gt; &lt;pre class="CodeRay highlight"&gt;&lt;code&gt;$ git clone http://github.com/apiman/apiman-plugins.git $ cd custom-path-parser-demo/&lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Have a look at &lt;code&gt;CustomPathParserImpl.java&lt;/code&gt;. It implements &lt;code&gt;IApiRequestPathParser&lt;/code&gt; and takes the incoming path and headers; it returns an &lt;code&gt;ApiRequestPathInfo&lt;/code&gt; that instructs Apiman what the &lt;code&gt;orgId&lt;/code&gt;, &lt;code&gt;apiId&lt;/code&gt;, &lt;code&gt;apiVersion&lt;/code&gt;, and &lt;code&gt;resource&lt;/code&gt; are, allowing Apiman to map the incoming request correctly.&lt;/p&gt; &lt;/div&gt; &lt;div class="listingblock"&gt; &lt;div class="content"&gt; &lt;pre class="CodeRay highlight"&gt;&lt;code data-lang="java"&gt;&lt;span class="directive"&gt;public&lt;/span&gt; &lt;span class="type"&gt;class&lt;/span&gt; &lt;span class="class"&gt;CustomPathParserImpl&lt;/span&gt; &lt;span class="directive"&gt;implements&lt;/span&gt; IApiRequestPathParser { &lt;span class="annotation"&gt;@Override&lt;/span&gt; &lt;span class="directive"&gt;public&lt;/span&gt; ApiRequestPathInfo parseEndpoint(&lt;span class="predefined-type"&gt;String&lt;/span&gt; path, HeaderMap headers) { &lt;span class="comment"&gt;// Your custom path logic&lt;/span&gt; } }&lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;For reference the default implementation is &lt;a href="https://github.com/apiman/apiman/blob/master/gateway/engine/core/src/main/java/io/apiman/gateway/engine/impl/DefaultRequestPathParser.java"&gt;io.apiman.gateway.engine.impl.DefaultRequestPathParser&lt;/a&gt;.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="creating-our-custom-version"&gt;Creating our custom version&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;In our demonstration &lt;code&gt;CustomPathParserImpl&lt;/code&gt; we will use a very simple parser that doesn&amp;#8217;t inspect any headers. I recommend you check the default implementation to find &lt;a href="https://github.com/apiman/apiman/blob/master/common/util/src/main/java/io/apiman/common/util/ApimanPathUtils.java"&gt;utilities&lt;/a&gt; that handles alternative ways of capturing versioning info, such as accept headers, version headers, etc.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;First we&amp;#8217;ll add a constructor with a string map. This will allow us to pass in configuration information from our static config file (&lt;code&gt;apiman.properties&lt;/code&gt; or &lt;code&gt;conf.json&lt;/code&gt;).&lt;/p&gt; &lt;/div&gt; &lt;div class="listingblock"&gt; &lt;div class="content"&gt; &lt;pre class="CodeRay highlight"&gt;&lt;code data-lang="java"&gt;&lt;span class="directive"&gt;final&lt;/span&gt; &lt;span class="predefined-type"&gt;String&lt;/span&gt; defaultOrgName; &lt;span class="directive"&gt;public&lt;/span&gt; CustomPathParserImpl(&lt;span class="predefined-type"&gt;Map&lt;/span&gt;&amp;lt;&lt;span class="predefined-type"&gt;String&lt;/span&gt;, &lt;span class="predefined-type"&gt;String&lt;/span&gt;&amp;gt; config) { &lt;span class="comment"&gt;// Pass in the defaultOrgName from static config or just use &amp;quot;DefaultOrg&amp;quot;.&lt;/span&gt; &lt;span class="local-variable"&gt;this&lt;/span&gt;.defaultOrgName = config.getOrDefault(&lt;span class="string"&gt;&lt;span class="delimiter"&gt;&amp;quot;&lt;/span&gt;&lt;span class="content"&gt;defaultOrgName&lt;/span&gt;&lt;span class="delimiter"&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;, &lt;span class="string"&gt;&lt;span class="delimiter"&gt;&amp;quot;&lt;/span&gt;&lt;span class="content"&gt;DefaultOrg&lt;/span&gt;&lt;span class="delimiter"&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;); } &lt;span class="directive"&gt;public&lt;/span&gt; ApiRequestPathInfo parseEndpoint(&lt;span class="predefined-type"&gt;String&lt;/span&gt; path, HeaderMap headers) { &lt;span class="predefined-type"&gt;String&lt;/span&gt;&lt;span class="type"&gt;[]&lt;/span&gt; split = StringUtils.split(path, &lt;span class="string"&gt;&lt;span class="delimiter"&gt;&amp;quot;&lt;/span&gt;&lt;span class="content"&gt;/&lt;/span&gt;&lt;span class="delimiter"&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;, &lt;span class="integer"&gt;3&lt;/span&gt;); &lt;span class="keyword"&gt;if&lt;/span&gt; (split == &lt;span class="predefined-constant"&gt;null&lt;/span&gt; || split.length &amp;lt; &lt;span class="integer"&gt;2&lt;/span&gt;) { &lt;span class="keyword"&gt;throw&lt;/span&gt; &lt;span class="keyword"&gt;new&lt;/span&gt; &lt;span class="exception"&gt;IllegalArgumentException&lt;/span&gt;(&lt;span class="string"&gt;&lt;span class="delimiter"&gt;&amp;quot;&lt;/span&gt;&lt;span class="content"&gt;Invalid path format, expected /apiId/apiVersion/&amp;lt;resource path&amp;gt;&lt;/span&gt;&lt;span class="delimiter"&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;); } ApiRequestPathInfo parsed = &lt;span class="keyword"&gt;new&lt;/span&gt; ApiRequestPathInfo(); &lt;span class="comment"&gt;// Let's set the org name manually as our configured `defaultOrgName`&lt;/span&gt; parsed.orgId = defaultOrgName; parsed.apiId = split[&lt;span class="integer"&gt;0&lt;/span&gt;]; parsed.apiVersion = split[&lt;span class="integer"&gt;1&lt;/span&gt;]; &lt;span class="keyword"&gt;if&lt;/span&gt; (split.length &amp;gt; &lt;span class="integer"&gt;2&lt;/span&gt;) { parsed.resource = &lt;span class="string"&gt;&lt;span class="delimiter"&gt;&amp;quot;&lt;/span&gt;&lt;span class="content"&gt;/&lt;/span&gt;&lt;span class="delimiter"&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt; + split[&lt;span class="integer"&gt;2&lt;/span&gt;]; } &lt;span class="keyword"&gt;else&lt;/span&gt; { parsed.resource = &lt;span class="string"&gt;&lt;span class="delimiter"&gt;&amp;quot;&lt;/span&gt;&lt;span class="content"&gt;/&lt;/span&gt;&lt;span class="delimiter"&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;; } &lt;span class="keyword"&gt;return&lt;/span&gt; parsed; }&lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;So now, if we have a path like this:&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;&lt;code&gt;/FooApi/1.0/some/resource&lt;/code&gt;&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;This will become:&lt;/p&gt; &lt;/div&gt; &lt;div class="dlist"&gt; &lt;dl&gt; &lt;dt class="hdlist1"&gt;orgId&lt;/dt&gt; &lt;dd&gt; &lt;p&gt;DefaultOrg&lt;/p&gt; &lt;/dd&gt; &lt;dt class="hdlist1"&gt;apiId&lt;/dt&gt; &lt;dd&gt; &lt;p&gt;FooApi&lt;/p&gt; &lt;/dd&gt; &lt;dt class="hdlist1"&gt;apiVersion&lt;/dt&gt; &lt;dd&gt; &lt;p&gt;1.0&lt;/p&gt; &lt;/dd&gt; &lt;dt class="hdlist1"&gt;resource&lt;/dt&gt; &lt;dd&gt; &lt;p&gt;/some/resource&lt;/p&gt; &lt;/dd&gt; &lt;/dl&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Which would be the equivalent of the default style of:&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;&lt;code&gt;/DefaultOrg/FooApi/1.0/some/resource&lt;/code&gt;&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="wiring-it-up"&gt;Wiring it up&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="admonitionblock note"&gt; &lt;table&gt; &lt;tr&gt; &lt;td class="icon"&gt; &lt;i class="fa icon-note" title="Note"&gt;&lt;/i&gt; &lt;/td&gt; &lt;td class="content"&gt; Change the versions as applicable. &lt;/td&gt; &lt;/tr&gt; &lt;/table&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Run &lt;code&gt;mvn clean install&lt;/code&gt; at the demo project&amp;#8217;s root. Then open your Apiman configuration file (either apiman.properties or conf.json).&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;For the Vert.x Gateway:&lt;/p&gt; &lt;/div&gt; &lt;div class="listingblock"&gt; &lt;div class="content"&gt; &lt;pre class="CodeRay highlight"&gt;&lt;code data-lang="json"&gt;&lt;span class="key"&gt;&lt;span class="delimiter"&gt;&amp;quot;&lt;/span&gt;&lt;span class="content"&gt;request-parser&lt;/span&gt;&lt;span class="delimiter"&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;: { &lt;span class="key"&gt;&lt;span class="delimiter"&gt;&amp;quot;&lt;/span&gt;&lt;span class="content"&gt;class&lt;/span&gt;&lt;span class="delimiter"&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;: &lt;span class="string"&gt;&lt;span class="delimiter"&gt;&amp;quot;&lt;/span&gt;&lt;span class="content"&gt;plugin:io.apiman.plugins:custom-path-parser-plugin-demo:1.4.3.Final:war/io.apiman.plugins.demo.custompathparser.CustomPathParserImpl&lt;/span&gt;&lt;span class="delimiter"&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;, &lt;span class="key"&gt;&lt;span class="delimiter"&gt;&amp;quot;&lt;/span&gt;&lt;span class="content"&gt;config&lt;/span&gt;&lt;span class="delimiter"&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;: { &lt;span class="key"&gt;&lt;span class="delimiter"&gt;&amp;quot;&lt;/span&gt;&lt;span class="content"&gt;defaultOrgName&lt;/span&gt;&lt;span class="delimiter"&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;: &lt;span class="string"&gt;&lt;span class="delimiter"&gt;&amp;quot;&lt;/span&gt;&lt;span class="content"&gt;Apiman&lt;/span&gt;&lt;span class="delimiter"&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt; &lt;span class="error"&gt;/&lt;/span&gt;&lt;span class="error"&gt;/&lt;/span&gt; &lt;span class="error"&gt;W&lt;/span&gt;&lt;span class="error"&gt;h&lt;/span&gt;&lt;span class="error"&gt;a&lt;/span&gt;&lt;span class="error"&gt;t&lt;/span&gt;&lt;span class="error"&gt;e&lt;/span&gt;&lt;span class="error"&gt;v&lt;/span&gt;&lt;span class="error"&gt;e&lt;/span&gt;&lt;span class="error"&gt;r&lt;/span&gt; &lt;span class="error"&gt;y&lt;/span&gt;&lt;span class="error"&gt;o&lt;/span&gt;&lt;span class="error"&gt;u&lt;/span&gt; &lt;span class="error"&gt;l&lt;/span&gt;&lt;span class="error"&gt;i&lt;/span&gt;&lt;span class="error"&gt;k&lt;/span&gt;&lt;span class="error"&gt;e&lt;/span&gt; } }&lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;For the Servlet Gateway:&lt;/p&gt; &lt;/div&gt; &lt;div class="listingblock"&gt; &lt;div class="content"&gt; &lt;pre class="CodeRay highlight"&gt;&lt;code data-lang="properties"&gt;apiman-gateway.request-parser=plugin:io.apiman.plugins:custom-path-parser-plugin-demo:1.4.3.Final:war/io.apiman.plugins.demo.custompathparser.CustomPathParserImpl apiman-gateway.request-parser.defaultOrgName=Apiman // Whatever you like&lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="listingblock"&gt; &lt;div class="content"&gt; &lt;pre class="CodeRay highlight"&gt;&lt;code&gt;$ curl 'http://localhost:8082/TheApi/2' { "method" : "GET", "resource" : "/services/echo/foobar/", "uri" : "/services/echo/foobar/", "headers" : { "Accept" : "*/*", "Host" : "localhost:8080", "transfer-encoding" : "chunked", "User-Agent" : "curl/7.54.0" }, "bodyLength" : null, "bodySha1" : null, "counter" : 2 }&lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="admonitionblock note"&gt; &lt;table&gt; &lt;tr&gt; &lt;td class="icon"&gt; &lt;i class="fa icon-note" title="Note"&gt;&lt;/i&gt; &lt;/td&gt; &lt;td class="content"&gt; Double check that your plugin is structured correctly and you have all of the names right in your plugin URL. Otherwise you will get errors complaining that your classes are not found. &lt;/td&gt; &lt;/tr&gt; &lt;/table&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="conclusion"&gt;Conclusion&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;We created a simple plugin to provide custom URL mappings to the Apiman Gateway and configured our gateways to use our code.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;A future improvement extending IApiRequestPathParser will allow for the Apiman Gateway to report URLs back to the Apiman Manager (or whomever publishes) in a more granular fashion (rather than just using &lt;code&gt;parseEndpoint&lt;/code&gt;).&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/3AENywN72xA" height="1" width="1" alt=""/&gt;</content><summary>One common request we here is how to create custom URL patterns for the Apiman Gateway. For example, this means allowing changing the (Public API) default: http://gatewayhost:port/{organizationId}/{apiId}/{version}/ To a custom alternative. As a simple example we’re going to hard-code an organisation in. We’ll assume that we’ve established a convention to always publish our APIs to a particular or...</summary><dc:creator>Marc Savy</dc:creator><dc:date>2018-07-03T20:00:00Z</dc:date><feedburner:origLink>http://apiman.io/blog/apiman/gateway/manager/plugin/extensibility/2018/07/03/custom-url-parser.html</feedburner:origLink></entry><entry><title>Version 1.4.3 of Apiman is released!</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/5vxh_AO58OY/release-1.4.3.html" /><category term="feed_group_name_apiman" scheme="searchisko:content:tags" /><category term="feed_name_apiman" scheme="searchisko:content:tags" /><author><name>Marc Savy</name></author><id>searchisko:content:id:jbossorg_blog-version_1_4_3_of_apiman_is_released</id><updated>2018-07-03T19:20:00Z</updated><published>2018-07-03T19:20:00Z</published><content type="html">&lt;div class="paragraph"&gt; &lt;p&gt;Apiman 1.4.3.Final is out. It contains a couple of bug-fixes. Most notably, a bug in the Vert.x Gateway that prevented plugins specified in static config (&lt;code&gt;conf.json&lt;/code&gt;) from being loaded properly.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;If you experience any issues, please report them to us via &lt;a href="https://issues.jboss.org/browse/APIMAN/"&gt;JIRA&lt;/a&gt;, &lt;a href="https://github.com/apiman/apiman"&gt;GitHub&lt;/a&gt;, or &lt;a href="https://lists.jboss.org/mailman/listinfo/apiman-user"&gt;the mailing list&lt;/a&gt;.&lt;/p&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="download-1-4-3-final"&gt;Download 1.4.3.Final&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="ulist"&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;&lt;a href="http://downloads.jboss.org/apiman/1.4.3.Final/apiman-distro-vertx-1.4.3.Final.zip"&gt;Vert.x (Gateway Only)&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="http://downloads.jboss.org/apiman/1.4.3.Final/apiman-distro-wildfly10-1.4.3.Final-overlay.zip"&gt;WildFly 10 or EAP 7.1&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="http://downloads.jboss.org/apiman/1.4.3.Final/apiman-distro-wildfly11-1.4.3.Final-overlay.zip"&gt;WildFly 11&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="http://downloads.jboss.org/apiman/1.4.3.Final/apiman-distro-eap7-1.4.3.Final-overlay.zip"&gt;EAP 7&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="http://downloads.jboss.org/apiman/1.4.3.Final/apiman-distro-tomcat8-1.4.3.Final-overlay.zip"&gt;Tomcat 8+&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="release-notes"&gt;Release Notes&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="ulist"&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://issues.jboss.org/secure/ReleaseNote.jspa?projectId=12314121&amp;amp;version=12338183"&gt;1.4.3.Final&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;div class="ulist"&gt; &lt;div class="title"&gt;Bugs&lt;/div&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://issues.jboss.org/browse/APIMAN-1338"&gt;APIMAN-1338&lt;/a&gt; - Non-policy plugins not being loaded properly from Vert.x static config&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="http://issues.jboss.org/browse/APIMAN-1340"&gt;APIMAN-1340&lt;/a&gt; - NPE when starting&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/5vxh_AO58OY" height="1" width="1" alt=""/&gt;</content><summary>Apiman 1.4.3.Final is out. It contains a couple of bug-fixes. Most notably, a bug in the Vert.x Gateway that prevented plugins specified in static config (conf.json) from being loaded properly. If you experience any issues, please report them to us via JIRA, GitHub, or the mailing list. Download 1.4.3.Final Vert.x (Gateway Only) WildFly 10 or EAP 7.1 WildFly 11 EAP 7 Tomcat 8+ Release Notes 1.4.3....</summary><dc:creator>Marc Savy</dc:creator><dc:date>2018-07-03T19:20:00Z</dc:date><feedburner:origLink>http://apiman.io/blog/apiman/release/2018/07/03/release-1.4.3.html</feedburner:origLink></entry><entry><title>Blogging has moved</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/tunUUnmSJLk/blogging-has-moved.html" /><category term="feed_group_name_teiid" scheme="searchisko:content:tags" /><category term="feed_name_teiid" scheme="searchisko:content:tags" /><author><name>Steven Hawkins</name></author><id>searchisko:content:id:jbossorg_blog-blogging_has_moved</id><updated>2018-07-03T19:15:14Z</updated><published>2018-07-03T18:57:00Z</published><content type="html">Now that we have worked the kinks out of our new &lt;a href="http://teiid.io/"&gt;teiid.io&lt;/a&gt; site, we've added a simple blogging feature there &lt;a href="http://teiid.io/blog"&gt;teiid.io/blog&lt;/a&gt;. For the time being however that means that some features will not there - such as an RSS feed or comments. As we get more familiar with Hugo, we'll add necessary features.&lt;br /&gt;&lt;br /&gt;Thank you,&lt;br /&gt;Steve&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/tunUUnmSJLk" height="1" width="1" alt=""/&gt;</content><summary>Now that we have worked the kinks out of our new teiid.io site, we've added a simple blogging feature there teiid.io/blog. For the time being however that means that some features will not there - such as an RSS feed or comments. As we get more familiar with Hugo, we'll add necessary features. Thank you, Steve</summary><dc:creator>Steven Hawkins</dc:creator><dc:date>2018-07-03T18:57:00Z</dc:date><feedburner:origLink>http://teiid.blogspot.com/2018/07/blogging-has-moved.html</feedburner:origLink></entry><entry><title>Next DevNation Live: Feature toggles and hypothesis-driven development, July 5th, 12pm EDT</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/9SYUHwJ1K3k/" /><category term="devnation" scheme="searchisko:content:tags" /><category term="DevNation Live" scheme="searchisko:content:tags" /><category term="events" scheme="searchisko:content:tags" /><category term="feature toggles" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="Hypothesis-driven development" scheme="searchisko:content:tags" /><category term="Modern App Dev" scheme="searchisko:content:tags" /><category term="Software Development" scheme="searchisko:content:tags" /><author><name>Burr Sutter</name></author><id>searchisko:content:id:jbossorg_blog-next_devnation_live_feature_toggles_and_hypothesis_driven_development_july_5th_12pm_edt</id><updated>2018-07-03T15:20:04Z</updated><published>2018-07-03T15:20:04Z</published><content type="html">&lt;p&gt;&lt;span style="font-weight: 400;"&gt;Can you “foresee the feature?” Do you know if proposed changes to your application will have the desired impact to your business? Let’s drop the crystal ball approach and start practicing some hypothesis-driven development so you can test your assumptions. Not every new feature is guaranteed to be a success. Some might just waste time and increase your technical debt. Join us for the next online DevNation Live on July 5th at 12pm EDT for &lt;/span&gt;&lt;a href="https://onlinexperiences.com/Server.nxp?LASCmd=AI:4;F:APIUTILS!51004&amp;#38;PageID=2C1CF13E-08F4-43A4-B25D-0B38FE3226CF&amp;#38;AffiliateData=blog"&gt;&lt;i&gt;&lt;span style="font-weight: 400;"&gt;Feature Toggles and Hypothesis-driven Development&lt;/span&gt;&lt;/i&gt;&lt;/a&gt;&lt;span style="font-weight: 400;"&gt;, presented by &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;Red Hat director of Developer Experience&lt;/span&gt;&lt;span style="font-weight: 400;"&gt;, &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;Edson Yanaga&lt;/span&gt;&lt;span style="font-weight: 400;"&gt;. &lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;In this session, we’ll demonstrate how feature toggles can be incorporated into your software development process to let you quickly assess the business results of changes. By toggling functionality on and off, you can measure the impact and make better decisions based on real data.&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;Join us to gain an understanding of how the use of hypotheses, not requirements, can help you deliver what your business actually requires while learning quickly what works and what does not.&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;a href="https://onlinexperiences.com/Server.nxp?LASCmd=AI:4;F:APIUTILS!51004&amp;#38;PageID=2C1CF13E-08F4-43A4-B25D-0B38FE3226CF&amp;#38;AffiliateData=blog"&gt;&lt;b&gt;Register now&lt;/b&gt;&lt;/a&gt;&lt;b&gt; and join the live presentation at 12pm EDT, Thursday, July 5th. &lt;/b&gt;&lt;/p&gt; &lt;h2&gt;&lt;b&gt;Session Agenda&lt;/b&gt;&lt;/h2&gt; &lt;p&gt;&lt;span id="more-504677"&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;In this session you’ll discover:&lt;/span&gt;&lt;/p&gt; &lt;ol&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;What is hypothesis-driven development and how it can drive better data-based decisions.&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;How feature toggles can be bundled into your software development process to quickly allow functionality to be turned on and off to measure the difference  in results.&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;Why combining feature toggles with hypothesis-driven development will give you the tools to quickly analyze whether a proposed change will achieve your business objectives.&lt;/span&gt;&lt;/li&gt; &lt;/ol&gt; &lt;h2&gt;&lt;b&gt;About the speakers&lt;/b&gt;&lt;/h2&gt; &lt;p&gt;&lt;b&gt;&lt;i&gt;Edson Yanaga, Director, Customer Experience, Red Hat&lt;/i&gt;&lt;/b&gt;&lt;b&gt;&lt;br /&gt; &lt;/b&gt;&lt;span style="font-weight: 400;"&gt;Edson Yanaga (&lt;a href="https://twitter.com/yanaga."&gt;@yanaga&lt;/a&gt;) is a Red Hat director of Developer Experience, a Java Champion, and a Microsoft MVP. Edson is a published author and a frequent speaker at international conferences, discussing Java&lt;img src="https://s.w.org/images/core/emoji/2.4/72x72/2122.png" alt="™" class="wp-smiley" style="height: 1em; max-height: 1em;" /&gt;, microservices, cloud computing, DevOps, and software craftsmanship. He considers himself a software craftsman and is convinced that all of us can create a better world for people with better software. He is passionate about helping developers worldwide deliver better software more quickly and safely.&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;&lt;b&gt;DevNation Live Tech Talks&lt;/b&gt;&lt;/h2&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;Check our &lt;/span&gt;&lt;a href="https://developers.redhat.com/events/"&gt;&lt;span style="font-weight: 400;"&gt;developer events&lt;/span&gt;&lt;/a&gt;&lt;span style="font-weight: 400;"&gt; page to find out what is happening next, such as upcoming &lt;/span&gt;&lt;a href="https://onlinexperiences.com/Server.nxp?LASCmd=AI:4;F:APIUTILS!51004&amp;#38;PageID=2C1CF13E-08F4-43A4-B25D-0B38FE3226CF&amp;#38;AffiliateData=blog"&gt;&lt;span style="font-weight: 400;"&gt;DevNation Live Tech Talks&lt;/span&gt;&lt;/a&gt;&lt;span style="font-weight: 400;"&gt;. You can view over a dozen recorded videos for previous sessions:&lt;/span&gt;&lt;/p&gt; &lt;ul&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;June 21: Advanced Microservices Tracing with Jaeger&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;June 7: Your Journey to a Serverless World—An Introduction to Serverless&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;May 16: Serverless and Servicefull Applications – Where Microservices complements Serverless&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;May 2: Jakarta EE: The Future of Java EE&lt;/span&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;b&gt;Don’t forget to &lt;/b&gt;&lt;a href="https://onlinexperiences.com/Server.nxp?LASCmd=AI:4;F:APIUTILS!51004&amp;#38;PageID=2C1CF13E-08F4-43A4-B25D-0B38FE3226CF&amp;#38;AffiliateData=blog"&gt;&lt;b&gt;register now&lt;/b&gt;&lt;/a&gt;&lt;b&gt; and join the live presentation at 12pm EDT, Thursday, July 5th.&lt;/b&gt;&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F03%2Fnext-devnation-live-feature-toggles-and-hypothesis-driven-development-july-5th-12pm-edt%2F&amp;#38;linkname=Next%20DevNation%20Live%3A%20Feature%20toggles%20and%20hypothesis-driven%20development%2C%20July%205th%2C%2012pm%20EDT" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F03%2Fnext-devnation-live-feature-toggles-and-hypothesis-driven-development-july-5th-12pm-edt%2F&amp;#38;linkname=Next%20DevNation%20Live%3A%20Feature%20toggles%20and%20hypothesis-driven%20development%2C%20July%205th%2C%2012pm%20EDT" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F03%2Fnext-devnation-live-feature-toggles-and-hypothesis-driven-development-july-5th-12pm-edt%2F&amp;#38;linkname=Next%20DevNation%20Live%3A%20Feature%20toggles%20and%20hypothesis-driven%20development%2C%20July%205th%2C%2012pm%20EDT" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F03%2Fnext-devnation-live-feature-toggles-and-hypothesis-driven-development-july-5th-12pm-edt%2F&amp;#38;linkname=Next%20DevNation%20Live%3A%20Feature%20toggles%20and%20hypothesis-driven%20development%2C%20July%205th%2C%2012pm%20EDT" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F03%2Fnext-devnation-live-feature-toggles-and-hypothesis-driven-development-july-5th-12pm-edt%2F&amp;#38;linkname=Next%20DevNation%20Live%3A%20Feature%20toggles%20and%20hypothesis-driven%20development%2C%20July%205th%2C%2012pm%20EDT" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F03%2Fnext-devnation-live-feature-toggles-and-hypothesis-driven-development-july-5th-12pm-edt%2F&amp;#38;linkname=Next%20DevNation%20Live%3A%20Feature%20toggles%20and%20hypothesis-driven%20development%2C%20July%205th%2C%2012pm%20EDT" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F03%2Fnext-devnation-live-feature-toggles-and-hypothesis-driven-development-july-5th-12pm-edt%2F&amp;#38;linkname=Next%20DevNation%20Live%3A%20Feature%20toggles%20and%20hypothesis-driven%20development%2C%20July%205th%2C%2012pm%20EDT" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F03%2Fnext-devnation-live-feature-toggles-and-hypothesis-driven-development-july-5th-12pm-edt%2F&amp;#38;linkname=Next%20DevNation%20Live%3A%20Feature%20toggles%20and%20hypothesis-driven%20development%2C%20July%205th%2C%2012pm%20EDT" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F03%2Fnext-devnation-live-feature-toggles-and-hypothesis-driven-development-july-5th-12pm-edt%2F&amp;#38;title=Next%20DevNation%20Live%3A%20Feature%20toggles%20and%20hypothesis-driven%20development%2C%20July%205th%2C%2012pm%20EDT" data-a2a-url="https://developers.redhat.com/blog/2018/07/03/next-devnation-live-feature-toggles-and-hypothesis-driven-development-july-5th-12pm-edt/" data-a2a-title="Next DevNation Live: Feature toggles and hypothesis-driven development, July 5th, 12pm EDT"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/07/03/next-devnation-live-feature-toggles-and-hypothesis-driven-development-july-5th-12pm-edt/"&gt;Next DevNation Live: Feature toggles and hypothesis-driven development, July 5th, 12pm EDT&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/9SYUHwJ1K3k" height="1" width="1" alt=""/&gt;</content><summary>Can you “foresee the feature?” Do you know if proposed changes to your application will have the desired impact to your business? Let’s drop the crystal ball approach and start practicing some hypothesis-driven development so you can test your assumptions. Not every new feature is guaranteed to be a success. Some might just waste time and increase your technical debt. Join us for the next online D...</summary><dc:creator>Burr Sutter</dc:creator><dc:date>2018-07-03T15:20:04Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2018/07/03/next-devnation-live-feature-toggles-and-hypothesis-driven-development-july-5th-12pm-edt/</feedburner:origLink></entry><entry><title>Byteman 4.0.3 has been released</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/zbnBLYWmMkQ/byteman-403-has-been-released.html" /><category term="feed_group_name_byteman" scheme="searchisko:content:tags" /><category term="feed_name_byteman" scheme="searchisko:content:tags" /><author><name>Andrew Dinn</name></author><id>searchisko:content:id:jbossorg_blog-byteman_4_0_3_has_been_released</id><updated>2018-07-03T08:02:00Z</updated><published>2018-07-03T08:02:00Z</published><content type="html">&lt;div class="post-body entry-content" id="post-body-3028514058787793602" itemprop="description articleBody"&gt;Byteman 4.0.3 is now available from the &lt;a class="moz-txt-link-freetext" href="http://www.jboss.org/byteman/downloads"&gt;Byteman downloads page&lt;/a&gt; and from the &lt;a class="moz-txt-link-freetext" href="https://oss.sonatype.org/index.html#nexus-search;quick%7Ebyteman"&gt;Maven Central repository&lt;/a&gt;. It is the latest release for use on JDK9+ runtimes. It is also recommended as the preferred release for use on JDK8- runtimes.&lt;/div&gt;&lt;div class="post-body entry-content" id="post-body-3028514058787793602" itemprop="description articleBody"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="post-body entry-content" id="post-body-3028514058787793602" itemprop="description articleBody"&gt;Byteman 4.0.3 updates the 4.0.2 release with a small number of bug fixes and performance improvements. More details can be found in the &lt;a href="http://downloads.jboss.org/byteman/4.0.3/ReleaseNotes.txt"&gt;Release Notes&lt;/a&gt;.&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/zbnBLYWmMkQ" height="1" width="1" alt=""/&gt;</content><summary>Byteman 4.0.3 is now available from the Byteman downloads page and from the Maven Central repository. It is the latest release for use on JDK9+ runtimes. It is also recommended as the preferred release for use on JDK8- runtimes. Byteman 4.0.3 updates the 4.0.2 release with a small number of bug fixes and performance improvements. More details can be found in the Release Notes.</summary><dc:creator>Andrew Dinn</dc:creator><dc:date>2018-07-03T08:02:00Z</dc:date><feedburner:origLink>http://bytemanblog.blogspot.com/2018/07/byteman-403-has-been-released.html</feedburner:origLink></entry><entry><title>A giant leap forward with multithreaded incremental solving</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/eOX1R_z6yKQ/AGiantLeapForwardWithMultithreadedIncrementalSolving.html" /><category term="algorithm" scheme="searchisko:content:tags" /><category term="benchmark" scheme="searchisko:content:tags" /><category term="feed_group_name_optaplanner" scheme="searchisko:content:tags" /><category term="feed_name_optaplanner" scheme="searchisko:content:tags" /><author><name>ge0ffrey</name></author><id>searchisko:content:id:jbossorg_blog-a_giant_leap_forward_with_multithreaded_incremental_solving</id><updated>2018-07-03T13:58:04Z</updated><published>2018-07-03T00:00:00Z</published><content type="html">&lt;div id="preamble"&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;OptaPlanner finally supports &lt;em&gt;multithreaded incremental solving&lt;/em&gt;. &lt;strong&gt;The speedup is spectacular. Even with just a few CPU cores, it triples the score calculation speed.&lt;/strong&gt; See the results below. To activate it, a single extra line in the configuration suffices.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;&lt;a href="https://issues.jboss.org/browse/PLANNER-76"&gt;The original feature request&lt;/a&gt; stems from 2007. Throughout the years, step by step, we diligently prepared the internal architecture for it. So now, after 10 years, we fully support it from &lt;code&gt;7.9.0.Final&lt;/code&gt; onwards.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;But why did it take so long to implement?&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="_requirements"&gt;Requirements&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Let’s take a look at the requirements for multithreaded incremental solving:&lt;/p&gt; &lt;/div&gt; &lt;div class="ulist"&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Horizontally scale an algorithm across CPUs.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Don’t ruin the speedup of incremental score calculation.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Runs must be reproducible.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;div class="sect2"&gt; &lt;h3 id="_horizontally_scale_an_algorithm_across_cpus"&gt;Horizontally scale an algorithm across CPUs&lt;/h3&gt; &lt;div class="paragraph"&gt; &lt;p&gt;There are several ways to use multiple threads without doing real multithreaded solving:&lt;/p&gt; &lt;/div&gt; &lt;div class="ulist"&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Multitenancy&lt;/strong&gt;: Solve multiple datasets, one per thread.&lt;/p&gt; &lt;div class="ulist"&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Works since the first OptaPlanner version.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Doesn’t do horizontal scaling on 1 dataset.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Multi bet solving&lt;/strong&gt;: Solve one dataset in multiple ways, completely independent of each other. Take the best result.&lt;/p&gt; &lt;div class="ulist"&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Works since the first OptaPlanner version.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;It’s usually a waste of resources: use the Benchmarker during development instead to find the best algorithm in advance.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Doesn’t scale horizontally: the best result is marginally better than a single-threaded result and takes equally long.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Partitioned Search&lt;/strong&gt;: Split up one dataset and solve each one separately.&lt;/p&gt; &lt;div class="ulist"&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Fully supported since OptaPlanner 7.0.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Scales horizontally at an expensive trade-off of solution quality, because &lt;a href="https://www.optaplanner.org/blog/2014/03/03/CanMapReduceSolvePlanningProblems.html"&gt;partitioning excludes optimal solutions&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;But none of these are real parallel heuristics, as shown in the bottom right corner below:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="multiThreadingStrategies.png" alt="multiThreadingStrategies"&gt; &lt;/img&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;In real multithreaded solving, we solve 1 dataset, without partitioning, by offloading heavy calculations of 1 algorithm (which could be a composition of multiple algorithms) to multiple threads on separate CPU cores.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;In OptaPlanner’s Construction Heuristics and Local Search, the most CPU-expensive work is calculating the score of a move. For example in Tabu Search, each step (the outer iteration) evaluates around a 1000 moves. That’s measured as the &lt;em&gt;score calculation speed&lt;/em&gt;. It usually varies between 1k evaluated moves per second and 500k evaluated moves per second.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;&lt;em&gt;Multithreaded solving is just a matter of distributing the move evaluations of a step across multiple threads.&lt;/em&gt; That’s straightforward. There are even a few users that did this (most notably a space agency supplier), by hacking our code. But they didn’t see a performance gain. Quite the opposite actually (except with an easy score calculator). Those changes broke incremental score calculation. &lt;strong&gt;Multithreaded solving is easy. But multithreaded &lt;em&gt;incremental&lt;/em&gt; solving is hard.&lt;/strong&gt;&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect2"&gt; &lt;h3 id="_don_t_ruin_the_speedup_of_incremental_score_calculation"&gt;Don’t ruin the speedup of incremental score calculation&lt;/h3&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Ah, this brings us to incremental score calculation. The key to performance. It is the rocket science at the heart of OptaPlanner that brings massive scalability. And — for the few that have seen them — the cause of the notorious score corruption exception.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;What is incremental score calculation? For each move, we calculate the score of the solution state after applying that move. With non-incremental score calculation, the entire score is calculated from scratch. But with incremental score calculation, we only calculate the delta, as shown below. That’s far more efficient.&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="incrementalScoreCalculationEmployeeRostering.png" alt="incrementalScoreCalculationEmployeeRostering"&gt; &lt;/img&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;To put this in perspective: an incremental score calculator on a vehicle routing problem with 1000 locations, is theoretically around 500 times faster than a non-incremental score calculator. &lt;strong&gt;To offset the loss of an incremental solver on a dataset of a 1000 planning entities, a multithreaded non-incremental solver would need around 500 CPU cores (in theory).&lt;/strong&gt; In practice, the numbers vary, but the gain of incremental solving always outweighs the gain of multithreaded solving.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Of course, now, we can have our cake and eat it too.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Each incremental score calculator is inherently single threaded, so each move thread has its own score calculator and its own solution state. Cloning either is too expensive. To evaluate a move on a move thread, with incremental score calculation, we must reuse the score calculator of the previous evaluation. This implies that the working solution must be in the exact same state to begin with. But because the outer step iterations change the solution state constantly, the move threads must sync up with the main solver thread after every step.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;It’s similar to any real-time multiplayer game (such as StarCraft), in which multiple hosts need to sync up to show the same game state, but can’t afford to transmit the entire game state for every change.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;As soon as one thread goes out of sync, all calculations of that thread are corrupted, and the entire system is affected. But through a well designed orchestration of concurrent components (and multi-day test runs), we prevent race conditions. And it works. Like a charm.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Furthermore, the threads must be able to send moves to each other, even if it’s only to share the winning move. This too, posed a challenge. &lt;em&gt;OptaPlanner is an Object Oriented constraint solver&lt;/em&gt;, so its decision variables can be any valid Java type (not just booleans, numbers and floats), such as &lt;code&gt;Employee&lt;/code&gt; or &lt;code&gt;Foo&lt;/code&gt;. Those variables can sit in any domain class (called planning entities), such as &lt;code&gt;Shift&lt;/code&gt; or &lt;code&gt;Bar&lt;/code&gt;. The move instances reference those class instances. When a solution gets cloned to initiate a move thread, those planning entities, such as &lt;code&gt;Shift&lt;/code&gt; get cloned too. So when a move from thread A gets sent to thread B, OptaPlanner rebases the move on the solution state of thread B. This replaces the references from the move instance to thread A’s solution state with the equivalent references of thread B’s solution state. Pretty nifty.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect2"&gt; &lt;h3 id="_runs_must_be_reproducible"&gt;Runs must be reproducible&lt;/h3&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Reproducibility is king. The ability to run the same dataset through OptaPlanner twice and get the exact same result after the same number of steps (and at every step), is worth its weight in gold. To lose that, would make debugging, issue tracking and production audits extremely difficult.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The inherent unpredictable nature of thread execution order on multi-core machines, makes reproducibility an interesting requirement. Combine that with the reliance of many optimization algorithms on a seeded random number generator (which is not thread-safe), for a real challenge.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;But we did it. We have 100% reproducibility. This involves several ingenious mechanisms, such as using a master seeded random to generate a seeded random per thread, generating a predictable number of selected, buffered moves (because move generation often relies on the random generator too) and reordering evaluated moves in their originally selected order when they come back from the move threads.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="_the_configuration"&gt;The configuration&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Multithreaded incremental solving is easy to activate. Just add a &lt;code&gt;&amp;lt;moveThreadCount&amp;gt;&lt;/code&gt; line in your solver config:&lt;/p&gt; &lt;/div&gt; &lt;div class="listingblock"&gt; &lt;div class="content"&gt; &lt;pre class="highlight nowrap"&gt;&lt;code class="language-java" data-lang="java"&gt;&amp;lt;solver&amp;gt; &amp;lt;moveThreadCount&amp;gt;4&amp;lt;/moveThreadCount&amp;gt; ... &amp;lt;/solver&amp;gt;&lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;This basically donates 4 extra CPU cores to the solver. Use &lt;code&gt;AUTO&lt;/code&gt; to have OptaPlanner deduce it automatically. Optionally, specify a &lt;code&gt;&amp;lt;threadFactoryClass&amp;gt;&lt;/code&gt; for environments that don’t like arbitrary thread creation.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;It combines with every other feature, including other multithreading strategies (such as multitenancy, Partitioned Search, …​), if you have enough CPU cores to pull it off.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="_the_benchmarks"&gt;The benchmarks&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="sect2"&gt; &lt;h3 id="_methodology"&gt;Methodology&lt;/h3&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Using optaplanner-benchmark, I ran a set of macro benchmarks:&lt;/p&gt; &lt;/div&gt; &lt;div class="ulist"&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;On a 64-bit &lt;strong&gt;8-core&lt;/strong&gt; Intel i7-4790 desktop with 32GB physical RAM.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Using OpenJDK 1.8.0_171 on Linux.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;With the JVM max heap (&lt;code&gt;-Xmx&lt;/code&gt;) set to 4GB.&lt;/p&gt; &lt;div class="ulist"&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;I also tried 2GB and those results were worse, especially for a higher number of move threads.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;So when increasing the number of move threads, it’s important to increase the max memory too.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;With logging set to &lt;code&gt;info&lt;/code&gt; logging.&lt;/p&gt; &lt;div class="ulist"&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;I also tried &lt;code&gt;debug&lt;/code&gt; logging and those results were clearly worse (because the faster it runs, the more debug logging it does).&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;It’s recommended to &lt;a href="https://www.optaplanner.org/blog/2015/02/23/HowFastIsLogging.html"&gt;avoid debug logging in production&lt;/a&gt; anyway.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;With score DRL.&lt;/p&gt; &lt;div class="ulist"&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;I also tried with the incremental Java calculator and those results had more moves per second, but a lower relative gain per move thread (due to higher congestion).&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;5 minutes per dataset.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect2"&gt; &lt;h3 id="_results_on_the_vehicle_routing_problem_vrp"&gt;Results on the vehicle routing problem (VRP)&lt;/h3&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Below are the results on different VRP datasets for a First Fit Decreasing (the Construction Heuristic) followed by Tabu Search (the Local Search). Higher is better.&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="multithreadedSolvingVrpTabuSearch.png" alt="multithreadedSolvingVrpTabuSearch"&gt; &lt;/img&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The blue bar is the traditional, single-threaded OptaPlanner. It has an average score calculation speed of &lt;code&gt;26,947&lt;/code&gt; moves per second. That goes up to &lt;code&gt;45,565&lt;/code&gt; with 2 move threads, to &lt;code&gt;80,757&lt;/code&gt; with 4 move threads and to &lt;code&gt;88,410&lt;/code&gt; with 6 move threads.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;&lt;strong&gt;So by donating more CPU cores to OptaPlanner, it uses a fraction of the time to reach the same result.&lt;/strong&gt;&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;On other Local Search algorithms, such as Late Acceptance, we see similar results:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="multithreadedSolvingVrpLateAcceptance.png" alt="multithreadedSolvingVrpLateAcceptance"&gt; &lt;/img&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Late Acceptance is a fast stepping algorithm (especially in the beginning), which implies that it has less moves per step. Yet, it has a similar relative speed gain for the Vehicle Routing Problem.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;We also see a slight reduction of the relative speed gain on the biggest dataset with 2750 VRP locations, but I suspect this might be because the 4GB max heap memory is too low for it to function at full efficiency. I’ll investigate this further.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect2"&gt; &lt;h3 id="_results_on_nurse_rostering"&gt;Results on nurse rostering&lt;/h3&gt; &lt;div class="paragraph"&gt; &lt;p&gt;I also ran benchmarks on the nurse rostering use case, but with a JVM max heap (&lt;code&gt;-Xmx&lt;/code&gt;) set to 2GB. Here I tried Tabu Search, Simulated Annealing and Late Acceptance:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="multithreadedSolvingNurseRosteringTabuSearch.png" alt="multithreadedSolvingNurseRosteringTabuSearch"&gt; &lt;/img&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="multithreadedSolvingNurseRosteringSimulatedAnnealing.png" alt="multithreadedSolvingNurseRosteringSimulatedAnnealing"&gt; &lt;/img&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="multithreadedSolvingNurseRosteringLateAcceptance.png" alt="multithreadedSolvingNurseRosteringLateAcceptance"&gt; &lt;/img&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;In all 3 case, we see a welcome speed gain, but Tabu Search (a slow stepping algorithms) has a bigger relative gain than the others (which are fast stepping algorithms).&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;In any case, it’s clear that &lt;em&gt;your mileage may vary&lt;/em&gt;, depending on the use case and other factors.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="_future_improvements"&gt;Future improvements&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;As we increase the number of move threads or decrease the time to evaluate a single move on one thread, we see a higher congestion on the inter-thread communication queues, leading to a lower relative scalability gain. There are several ways to deal with that and we’ll be investigating such internal improvements in the future.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="_conclusion"&gt;Conclusion&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;&lt;em&gt;All your CPU are belong to OptaPlanner.&lt;/em&gt; &lt;a href="https://en.wikipedia.org/wiki/All_your_base_are_belong_to_us"&gt;[1]&lt;/a&gt;&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;With a single extra configuration line, &lt;a href="https://www.optaplanner.org/"&gt;OptaPlanner&lt;/a&gt; can reach the same high-quality solution in a fraction of the time. If you have CPU cores to spare, of course.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/eOX1R_z6yKQ" height="1" width="1" alt=""/&gt;</content><summary>OptaPlanner finally supports multithreaded incremental solving. The speedup is spectacular. Even with just a few CPU cores, it triples the score calculation speed. See the results below. To activate it, a single extra line in the configuration suffices. The original feature request stems from 2007. Throughout the years, step by step, we diligently prepared the internal architecture for it. So now,...</summary><dc:creator>ge0ffrey</dc:creator><dc:date>2018-07-03T00:00:00Z</dc:date><feedburner:origLink>https://www.optaplanner.org/blog/2018/07/03/AGiantLeapForwardWithMultithreadedIncrementalSolving.html</feedburner:origLink></entry></feed>
